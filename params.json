{"name":"flash","tagline":"Run same commands on multiple projects.","body":"<img src=\"http://colmarius.net/flash/images/flashtocat.png\" align=\"right\" width=\"100px\"/>\r\n\r\n[![Gem Version](https://badge.fury.io/rb/flash.svg)](http://badge.fury.io/rb/flash)\r\n[![Build Status](https://travis-ci.org/colmarius/flash.svg?branch=master)](https://travis-ci.org/colmarius/flash?branch=master)\r\n\r\n## Table of Contents\r\n\r\n- [What is Flash?](#what-is-flash)\r\n- [Motivation](#motivation)\r\n- [Installation](#installation)\r\n- [Basic Usage](#basic-usage)\r\n- [Commands](#commands)\r\n  - [flash clone](#flash-clone)\r\n  - [flash info](#flash-info)\r\n  - [flash run](#flash-run)\r\n- [Contributing](#contributing)\r\n- [License](#license)\r\n\r\n## What is Flash?\r\n\r\nMain purpose of Flash is to eliminate repetitive tasks, those of running the\r\nsame commands on multiple directories.\r\n\r\nIt allows one to define:\r\n- __aliases__ for sets of commands to be run on multiple directories\r\n- __groups__ for grouping together multiple directories\r\n\r\nBoth groups and aliases can be defined in the `.flash.yml` configuration file.\r\n\r\n## Motivation\r\n\r\n__Simple configuration file__\r\n\r\nA place to define both groups and aliases.\r\n\r\n__Inspect output__\r\n\r\nSee the output of flash commands runned on a group of projects. \r\n\r\n## Installation\r\n\r\n```bash\r\ngem install flash\r\n```\r\n\r\n## Basic Usage\r\n\r\nFlash requires a `.flash.yml` file in order to function. This should be\r\ndefined at the root of your workspace folder.\r\n\r\n```\r\n# .flash.yml\r\n\r\nfrontend:\r\n  - super-product1\r\n  - super-product2\r\n  - super-api\r\n  - super-sso\r\n\r\nlibraries:\r\n  - super-rest-client\r\n  - super-core-js\r\n  - super-core-css\r\n\r\naliases:\r\n  update-master: git stash; git checkout master; git pull\r\n  status: git status -s\r\n\r\nclone:\r\n  git: git@github.com:SuperDuper\r\n```\r\n\r\nHere we define two groups _frontend_ and _libraries_. We will be allowed to run commands on each of these groups.\r\n\r\nWe can also define two special configuration sections:\r\n\r\n- __aliases__: allows us two save repetitive and long commands\r\n- __clone__: allows to define a base __git__ URL from where projects in a group can be cloned\r\n\r\nWith a valid `.flash.yml` configuration file set in your current workspace you\r\nare now set to run flash commands.\r\n\r\n## Commands\r\n\r\nRunning `flash` will give you the following output:\r\n\r\n    Commands:\r\n      flash clone GROUP        # Clone all projects found in GROUP config file\r\n      flash help [COMMAND]     # Describe available commands or one specific command\r\n      flash info [GROUP]       # Display information from config file\r\n      flash run COMMAND GROUP  # Run one or more COMMAND(s) on the specified GROUP\r\n      flash version            # Display Flash gem version\r\n\r\n### flash clone\r\n\r\n    flash clone GROUP\r\n\r\nAllows to clone all projects defined in a GROUP by using the clone git base\r\nURL.\r\n\r\nGetting back to our `.flash.yml` example file...\r\n\r\n```\r\n# .flash.yml\r\n\r\nfrontend:\r\n  - super-product1\r\n  - super-product2\r\n  - super-api\r\n  - super-sso\r\n\r\n...\r\n\r\nclone:\r\n  git: git@github.com:SuperDuper\r\n```\r\n\r\nRunning the following command...\r\n\r\n    flash clone frontend\r\n\r\nwill clone from SuperDuper organization all projects defined in _frontend_\r\ngroup.\r\n\r\n### flash info\r\n\r\n    flash info [GROUP]\r\n\r\nThis is a helper command for printing `.flash.yml` contents. Prints all file\r\ncontents or just part of it (depending if group or other config section is\r\nspecified).\r\n\r\n### flash run\r\n\r\n    flash run COMMAND GROUP\r\n\r\nThe heart of flash is the __run__ command. It requires both a COMMAND and a \r\nGROUP. With this command one can run same tasks on all projects of same GROUP.\r\n\r\nNote: COMMAND can be a standalone command, or be defined in `aliases` section\r\n(where it must be a list of commands, semi-column separated).\r\n\r\nGetting back to our `.flash.yml` example file...\r\n\r\n```\r\n# .flash.yml\r\n\r\nfrontend:\r\n  - super-product1\r\n  - super-product2\r\n  - super-api\r\n  - super-sso\r\n\r\nlibraries:\r\n  - super-rest-client\r\n  - super-core-js\r\n  - super-core-css\r\n\r\naliases:\r\n  update-master: git stash; git checkout master; git pull\r\n  status: git status -s\r\n```\r\n\r\nhere are some commands you can run:\r\n\r\n    # Update master branch.\r\n    flash run update-master frontend\r\n    flash run update-master libraries\r\n\r\n    # Display status.\r\n    flash run status frontend\r\n\r\n    # List some files.\r\n    flash run ls frontend \r\n\r\n    # Lets push master branch to origin/staging (forced) for all frontend projects.\r\n    flash run \"git checkout master ; git checkout -B staging ; git push -f ; git checkout master\" frontend\r\n\r\n    # This last command could be aliased to `master-to-staging`, which would result in:\r\n    flash run master-to-staging frontend\r\n\r\n## Contributing\r\n\r\nPlease see [CONTRIBUTING.md](https://github.com/colmarius/flash/blob/master/CONTRIBUTING.md).\r\n\r\n## License\r\n\r\nAPACHE-2.0 See LICENSE for details.\r\n","google":"UA-53459983-1","note":"Don't delete this file! It's used internally to help with page regeneration."}